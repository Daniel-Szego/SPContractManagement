//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace ContractManagementData
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Agreement_Memo))]
    [KnownType(typeof(Agreement_ResponsibleInternal))]
    [KnownType(typeof(Agreement_Todo))]
    public partial class InternalPerson
    {
        #region Primitive Properties
        [DataMember]
        public virtual int ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual string UniqueName
        {
            get;
            set;
        }
        [DataMember]
        public virtual string LastName
        {
            get;
            set;
        }
        [DataMember]
        public virtual string FirstName
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual ICollection<Agreement_Memo> Agreement_Memo
        {
            get
            {
                if (_agreement_Memo == null)
                {
                    var newCollection = new FixupCollection<Agreement_Memo>();
                    newCollection.CollectionChanged += FixupAgreement_Memo;
                    _agreement_Memo = newCollection;
                }
                return _agreement_Memo;
            }
            set
            {
                if (!ReferenceEquals(_agreement_Memo, value))
                {
                    var previousValue = _agreement_Memo as FixupCollection<Agreement_Memo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAgreement_Memo;
                    }
                    _agreement_Memo = value;
                    var newValue = value as FixupCollection<Agreement_Memo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAgreement_Memo;
                    }
                }
            }
        }
        private ICollection<Agreement_Memo> _agreement_Memo;
        
    
        [DataMember]
        public virtual ICollection<Agreement_ResponsibleInternal> Agreement_ResponsibleInternal
        {
            get
            {
                if (_agreement_ResponsibleInternal == null)
                {
                    var newCollection = new FixupCollection<Agreement_ResponsibleInternal>();
                    newCollection.CollectionChanged += FixupAgreement_ResponsibleInternal;
                    _agreement_ResponsibleInternal = newCollection;
                }
                return _agreement_ResponsibleInternal;
            }
            set
            {
                if (!ReferenceEquals(_agreement_ResponsibleInternal, value))
                {
                    var previousValue = _agreement_ResponsibleInternal as FixupCollection<Agreement_ResponsibleInternal>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAgreement_ResponsibleInternal;
                    }
                    _agreement_ResponsibleInternal = value;
                    var newValue = value as FixupCollection<Agreement_ResponsibleInternal>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAgreement_ResponsibleInternal;
                    }
                }
            }
        }
        private ICollection<Agreement_ResponsibleInternal> _agreement_ResponsibleInternal;
        
    
        [DataMember]
        public virtual ICollection<Agreement_Todo> Agreement_Todo
        {
            get
            {
                if (_agreement_Todo == null)
                {
                    var newCollection = new FixupCollection<Agreement_Todo>();
                    newCollection.CollectionChanged += FixupAgreement_Todo;
                    _agreement_Todo = newCollection;
                }
                return _agreement_Todo;
            }
            set
            {
                if (!ReferenceEquals(_agreement_Todo, value))
                {
                    var previousValue = _agreement_Todo as FixupCollection<Agreement_Todo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAgreement_Todo;
                    }
                    _agreement_Todo = value;
                    var newValue = value as FixupCollection<Agreement_Todo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAgreement_Todo;
                    }
                }
            }
        }
        private ICollection<Agreement_Todo> _agreement_Todo;
        
    
        [DataMember]
        public virtual ICollection<Agreement_Todo> Agreement_Todo1
        {
            get
            {
                if (_agreement_Todo1 == null)
                {
                    var newCollection = new FixupCollection<Agreement_Todo>();
                    newCollection.CollectionChanged += FixupAgreement_Todo1;
                    _agreement_Todo1 = newCollection;
                }
                return _agreement_Todo1;
            }
            set
            {
                if (!ReferenceEquals(_agreement_Todo1, value))
                {
                    var previousValue = _agreement_Todo1 as FixupCollection<Agreement_Todo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAgreement_Todo1;
                    }
                    _agreement_Todo1 = value;
                    var newValue = value as FixupCollection<Agreement_Todo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAgreement_Todo1;
                    }
                }
            }
        }
        private ICollection<Agreement_Todo> _agreement_Todo1;

        #endregion

        #region Association Fixup
    
        private void FixupAgreement_Memo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Agreement_Memo item in e.NewItems)
                {
                    item.InternalPerson = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Agreement_Memo item in e.OldItems)
                {
                    if (ReferenceEquals(item.InternalPerson, this))
                    {
                        item.InternalPerson = null;
                    }
                }
            }
        }
    
        private void FixupAgreement_ResponsibleInternal(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Agreement_ResponsibleInternal item in e.NewItems)
                {
                    item.InternalPerson = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Agreement_ResponsibleInternal item in e.OldItems)
                {
                    if (ReferenceEquals(item.InternalPerson, this))
                    {
                        item.InternalPerson = null;
                    }
                }
            }
        }
    
        private void FixupAgreement_Todo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Agreement_Todo item in e.NewItems)
                {
                    item.InternalPerson = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Agreement_Todo item in e.OldItems)
                {
                    if (ReferenceEquals(item.InternalPerson, this))
                    {
                        item.InternalPerson = null;
                    }
                }
            }
        }
    
        private void FixupAgreement_Todo1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Agreement_Todo item in e.NewItems)
                {
                    item.InternalPerson1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Agreement_Todo item in e.OldItems)
                {
                    if (ReferenceEquals(item.InternalPerson1, this))
                    {
                        item.InternalPerson1 = null;
                    }
                }
            }
        }

        #endregion

    }
}

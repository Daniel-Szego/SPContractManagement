//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace ContractManagementData
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Agreement))]
    [KnownType(typeof(InternalPerson))]
    [KnownType(typeof(TodoFlag))]
    [KnownType(typeof(TodoPriority))]
    [KnownType(typeof(TodoType))]
    public partial class Agreement_Todo
    {
        #region Primitive Properties
        [DataMember]
        public virtual int ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual int Agreement_id
        {
            get { return _agreement_id; }
            set
            {
                if (_agreement_id != value)
                {
                    if (Agreement != null && Agreement.ID != value)
                    {
                        Agreement = null;
                    }
                    _agreement_id = value;
                }
            }
        }
        private int _agreement_id;
        [DataMember]
        public virtual int TodoType_id
        {
            get { return _todoType_id; }
            set
            {
                if (_todoType_id != value)
                {
                    if (TodoType != null && TodoType.ID != value)
                    {
                        TodoType = null;
                    }
                    _todoType_id = value;
                }
            }
        }
        private int _todoType_id;
        [DataMember]
        public virtual int TodoFlag_id
        {
            get { return _todoFlag_id; }
            set
            {
                if (_todoFlag_id != value)
                {
                    if (TodoFlag != null && TodoFlag.ID != value)
                    {
                        TodoFlag = null;
                    }
                    _todoFlag_id = value;
                }
            }
        }
        private int _todoFlag_id;
        [DataMember]
        public virtual int TodoPriority_id
        {
            get { return _todoPriority_id; }
            set
            {
                if (_todoPriority_id != value)
                {
                    if (TodoPriority != null && TodoPriority.ID != value)
                    {
                        TodoPriority = null;
                    }
                    _todoPriority_id = value;
                }
            }
        }
        private int _todoPriority_id;
        [DataMember]
        public virtual string TodoComment
        {
            get;
            set;
        }
        [DataMember]
        public virtual int Created_InternalPerson_id
        {
            get { return _created_InternalPerson_id; }
            set
            {
                if (_created_InternalPerson_id != value)
                {
                    if (InternalPerson1 != null && InternalPerson1.ID != value)
                    {
                        InternalPerson1 = null;
                    }
                    _created_InternalPerson_id = value;
                }
            }
        }
        private int _created_InternalPerson_id;
        [DataMember]
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual int Assigned_InternalPerson_id
        {
            get { return _assigned_InternalPerson_id; }
            set
            {
                if (_assigned_InternalPerson_id != value)
                {
                    if (InternalPerson != null && InternalPerson.ID != value)
                    {
                        InternalPerson = null;
                    }
                    _assigned_InternalPerson_id = value;
                }
            }
        }
        private int _assigned_InternalPerson_id;
        [DataMember]
        public virtual System.DateTime ExpriyDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual Agreement Agreement
        {
            get { return _agreement; }
            set
            {
                if (!ReferenceEquals(_agreement, value))
                {
                    var previousValue = _agreement;
                    _agreement = value;
                    FixupAgreement(previousValue);
                }
            }
        }
        private Agreement _agreement;
        
    
        [DataMember]
        public virtual InternalPerson InternalPerson
        {
            get { return _internalPerson; }
            set
            {
                if (!ReferenceEquals(_internalPerson, value))
                {
                    var previousValue = _internalPerson;
                    _internalPerson = value;
                    FixupInternalPerson(previousValue);
                }
            }
        }
        private InternalPerson _internalPerson;
        
    
        [DataMember]
        public virtual InternalPerson InternalPerson1
        {
            get { return _internalPerson1; }
            set
            {
                if (!ReferenceEquals(_internalPerson1, value))
                {
                    var previousValue = _internalPerson1;
                    _internalPerson1 = value;
                    FixupInternalPerson1(previousValue);
                }
            }
        }
        private InternalPerson _internalPerson1;
        
    
        [DataMember]
        public virtual TodoFlag TodoFlag
        {
            get { return _todoFlag; }
            set
            {
                if (!ReferenceEquals(_todoFlag, value))
                {
                    var previousValue = _todoFlag;
                    _todoFlag = value;
                    FixupTodoFlag(previousValue);
                }
            }
        }
        private TodoFlag _todoFlag;
        
    
        [DataMember]
        public virtual TodoPriority TodoPriority
        {
            get { return _todoPriority; }
            set
            {
                if (!ReferenceEquals(_todoPriority, value))
                {
                    var previousValue = _todoPriority;
                    _todoPriority = value;
                    FixupTodoPriority(previousValue);
                }
            }
        }
        private TodoPriority _todoPriority;
        
    
        [DataMember]
        public virtual TodoType TodoType
        {
            get { return _todoType; }
            set
            {
                if (!ReferenceEquals(_todoType, value))
                {
                    var previousValue = _todoType;
                    _todoType = value;
                    FixupTodoType(previousValue);
                }
            }
        }
        private TodoType _todoType;

        #endregion

        #region Association Fixup
    
        private void FixupAgreement(Agreement previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo.Contains(this))
            {
                previousValue.Agreement_Todo.Remove(this);
            }
    
            if (Agreement != null)
            {
                if (!Agreement.Agreement_Todo.Contains(this))
                {
                    Agreement.Agreement_Todo.Add(this);
                }
                if (Agreement_id != Agreement.ID)
                {
                    Agreement_id = Agreement.ID;
                }
            }
        }
    
        private void FixupInternalPerson(InternalPerson previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo.Contains(this))
            {
                previousValue.Agreement_Todo.Remove(this);
            }
    
            if (InternalPerson != null)
            {
                if (!InternalPerson.Agreement_Todo.Contains(this))
                {
                    InternalPerson.Agreement_Todo.Add(this);
                }
                if (Assigned_InternalPerson_id != InternalPerson.ID)
                {
                    Assigned_InternalPerson_id = InternalPerson.ID;
                }
            }
        }
    
        private void FixupInternalPerson1(InternalPerson previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo1.Contains(this))
            {
                previousValue.Agreement_Todo1.Remove(this);
            }
    
            if (InternalPerson1 != null)
            {
                if (!InternalPerson1.Agreement_Todo1.Contains(this))
                {
                    InternalPerson1.Agreement_Todo1.Add(this);
                }
                if (Created_InternalPerson_id != InternalPerson1.ID)
                {
                    Created_InternalPerson_id = InternalPerson1.ID;
                }
            }
        }
    
        private void FixupTodoFlag(TodoFlag previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo.Contains(this))
            {
                previousValue.Agreement_Todo.Remove(this);
            }
    
            if (TodoFlag != null)
            {
                if (!TodoFlag.Agreement_Todo.Contains(this))
                {
                    TodoFlag.Agreement_Todo.Add(this);
                }
                if (TodoFlag_id != TodoFlag.ID)
                {
                    TodoFlag_id = TodoFlag.ID;
                }
            }
        }
    
        private void FixupTodoPriority(TodoPriority previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo.Contains(this))
            {
                previousValue.Agreement_Todo.Remove(this);
            }
    
            if (TodoPriority != null)
            {
                if (!TodoPriority.Agreement_Todo.Contains(this))
                {
                    TodoPriority.Agreement_Todo.Add(this);
                }
                if (TodoPriority_id != TodoPriority.ID)
                {
                    TodoPriority_id = TodoPriority.ID;
                }
            }
        }
    
        private void FixupTodoType(TodoType previousValue)
        {
            if (previousValue != null && previousValue.Agreement_Todo.Contains(this))
            {
                previousValue.Agreement_Todo.Remove(this);
            }
    
            if (TodoType != null)
            {
                if (!TodoType.Agreement_Todo.Contains(this))
                {
                    TodoType.Agreement_Todo.Add(this);
                }
                if (TodoType_id != TodoType.ID)
                {
                    TodoType_id = TodoType.ID;
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace ContractManagementData
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Agreement))]
    [KnownType(typeof(ExpiryCategory))]
    public partial class Agreement_SalesActual
    {
        #region Primitive Properties
        [DataMember]
        public virtual int ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual int Agreement_id
        {
            get { return _agreement_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_agreement_id != value)
                    {
                        if (Agreement != null && Agreement.ID != value)
                        {
                            Agreement = null;
                        }
                        _agreement_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _agreement_id;
        [DataMember]
        public virtual string InvoiceNumber
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime InvoiceDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual string InvoiceText
        {
            get;
            set;
        }
        [DataMember]
        public virtual byte MonthActivity
        {
            get;
            set;
        }
        [DataMember]
        public virtual byte MonthInvoice
        {
            get;
            set;
        }
        [DataMember]
        public virtual decimal AmountInvoice
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime ExpiryDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<decimal> AmountOutstanding
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> ExpirySinceDays
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> ExpiryCategory_id
        {
            get { return _expiryCategory_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_expiryCategory_id != value)
                    {
                        if (ExpiryCategory != null && ExpiryCategory.ID != value)
                        {
                            ExpiryCategory = null;
                        }
                        _expiryCategory_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _expiryCategory_id;

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual Agreement Agreement
        {
            get { return _agreement; }
            set
            {
                if (!ReferenceEquals(_agreement, value))
                {
                    var previousValue = _agreement;
                    _agreement = value;
                    FixupAgreement(previousValue);
                }
            }
        }
        private Agreement _agreement;
        
    
        [DataMember]
        public virtual ExpiryCategory ExpiryCategory
        {
            get { return _expiryCategory; }
            set
            {
                if (!ReferenceEquals(_expiryCategory, value))
                {
                    var previousValue = _expiryCategory;
                    _expiryCategory = value;
                    FixupExpiryCategory(previousValue);
                }
            }
        }
        private ExpiryCategory _expiryCategory;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupAgreement(Agreement previousValue)
        {
            if (previousValue != null && previousValue.Agreement_SalesActual.Contains(this))
            {
                previousValue.Agreement_SalesActual.Remove(this);
            }
    
            if (Agreement != null)
            {
                if (!Agreement.Agreement_SalesActual.Contains(this))
                {
                    Agreement.Agreement_SalesActual.Add(this);
                }
                if (Agreement_id != Agreement.ID)
                {
                    Agreement_id = Agreement.ID;
                }
            }
        }
    
        private void FixupExpiryCategory(ExpiryCategory previousValue)
        {
            if (previousValue != null && previousValue.Agreement_SalesActual.Contains(this))
            {
                previousValue.Agreement_SalesActual.Remove(this);
            }
    
            if (ExpiryCategory != null)
            {
                if (!ExpiryCategory.Agreement_SalesActual.Contains(this))
                {
                    ExpiryCategory.Agreement_SalesActual.Add(this);
                }
                if (ExpiryCategory_id != ExpiryCategory.ID)
                {
                    ExpiryCategory_id = ExpiryCategory.ID;
                }
            }
            else if (!_settingFK)
            {
                ExpiryCategory_id = null;
            }
        }

        #endregion

    }
}
